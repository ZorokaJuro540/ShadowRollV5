"""
Script pour configurer le bot Shadow Roll pour l'h√©bergement multi-serveurs
Configure les permissions et g√©n√®re les liens d'invitation
"""
import discord
from discord.ext import commands
import os
import asyncio

# Configuration des permissions requises pour le bot
REQUIRED_PERMISSIONS = discord.Permissions(
    # Permissions de base
    read_messages=True,
    send_messages=True,
    embed_links=True,
    attach_files=True,
    read_message_history=True,
    use_external_emojis=True,
    add_reactions=True,
    
    # Permissions pour les commandes slash
    use_application_commands=True,
    
    # Permissions pour la gestion des messages
    manage_messages=True,
    
    # Permissions pour les threads (optionnel)
    create_public_threads=True,
    send_messages_in_threads=True,
    
    # Permissions pour les r√¥les (optionnel pour les admins)
    manage_roles=False,  # Non requis pour le fonctionnement de base
    
    # Permissions pour les webhooks (optionnel)
    manage_webhooks=False
)

async def generate_invite_link():
    """G√©n√©rer un lien d'invitation pour le bot"""
    
    # ID du bot (√† r√©cup√©rer depuis l'application Discord)
    client_id = os.getenv('DISCORD_CLIENT_ID')
    
    if not client_id:
        print("‚ùå DISCORD_CLIENT_ID non trouv√© dans les variables d'environnement")
        print("üìù Pour obtenir votre Client ID:")
        print("   1. Allez sur https://discord.com/developers/applications")
        print("   2. S√©lectionnez votre application bot")
        print("   3. Copiez l'Application ID / Client ID")
        print("   4. Ajoutez DISCORD_CLIENT_ID=votre_id aux variables d'environnement")
        return None
    
    # G√©n√©rer l'URL d'invitation
    invite_url = discord.utils.oauth_url(
        client_id=int(client_id),
        permissions=REQUIRED_PERMISSIONS,
        scopes=('bot', 'applications.commands')
    )
    
    return invite_url

def print_server_setup_guide():
    """Afficher le guide de configuration pour les nouveaux serveurs"""
    
    print("\n" + "="*60)
    print("ü§ñ GUIDE DE CONFIGURATION MULTI-SERVEURS")
    print("="*60)
    
    print("\nüìã PERMISSIONS REQUISES:")
    print("   ‚úì Lire les messages")
    print("   ‚úì Envoyer des messages")
    print("   ‚úì Int√©grer des liens")
    print("   ‚úì Joindre des fichiers")
    print("   ‚úì Lire l'historique des messages")
    print("   ‚úì Utiliser les emojis externes")
    print("   ‚úì Ajouter des r√©actions")
    print("   ‚úì Utiliser les commandes d'application")
    print("   ‚úì G√©rer les messages (optionnel)")
    print("   ‚úì Cr√©er des threads publics (optionnel)")
    
    print("\nüõ†Ô∏è CONFIGURATION AUTOMATIQUE:")
    print("   ‚Ä¢ Base de donn√©es SQLite (cr√©√©e automatiquement)")
    print("   ‚Ä¢ Syst√®me de joueurs (auto-enregistrement)")
    print("   ‚Ä¢ Collections individuelles par serveur")
    print("   ‚Ä¢ Commandes slash synchronis√©es automatiquement")
    
    print("\nüéÆ FONCTIONNALIT√âS DISPONIBLES:")
    print("   ‚Ä¢ Syst√®me de gacha avec 161 personnages d'anime")
    print("   ‚Ä¢ Jeu 'Tu pr√©f√®res' avec personnages f√©minins")
    print("   ‚Ä¢ Syst√®me d'√©quipement et d'√©volution")
    print("   ‚Ä¢ Boutique et syst√®me d'√©change")
    print("   ‚Ä¢ Succ√®s et classements")
    print("   ‚Ä¢ Interface en fran√ßais compl√®te")
    
    print("\nüëë COMMANDES ADMIN (optionnelles):")
    print("   ‚Ä¢ Ajouter des administrateurs avec !addadmin @utilisateur")
    print("   ‚Ä¢ Cr√©er des personnages personnalis√©s")
    print("   ‚Ä¢ G√©rer les s√©ries d'anime")
    print("   ‚Ä¢ Modifier les valeurs et raret√©s")
    
    print("\nüöÄ D√âMARRAGE RAPIDE:")
    print("   1. Invitez le bot avec le lien g√©n√©r√©")
    print("   2. Tapez !menu ou /menu pour commencer")
    print("   3. Utilisez !roll ou /roll pour vos premi√®res invocations")
    print("   4. Explorez !game pour les mini-jeux")

async def check_bot_permissions():
    """V√©rifier les permissions actuelles du bot"""
    
    token = os.getenv('DISCORD_TOKEN')
    if not token:
        print("‚ùå Token Discord non trouv√©")
        return False
    
    intents = discord.Intents.default()
    intents.message_content = True
    
    bot = commands.Bot(command_prefix='!', intents=intents)
    
    @bot.event
    async def on_ready():
        print(f"\n‚úÖ Bot connect√©: {bot.user}")
        print(f"üìä Serveurs actuels: {len(bot.guilds)}")
        
        for guild in bot.guilds:
            print(f"   - {guild.name} ({guild.id}) - {guild.member_count} membres")
            
            # V√©rifier les permissions dans ce serveur
            me = guild.get_member(bot.user.id)
            if me:
                perms = me.guild_permissions
                print(f"     Permissions: {'‚úì' if perms.send_messages else '‚úó'} Messages, "
                      f"{'‚úì' if perms.embed_links else '‚úó'} Embeds, "
                      f"{'‚úì' if perms.use_application_commands else '‚úó'} Slash Commands")
        
        await bot.close()
    
    try:
        await bot.start(token)
    except Exception as e:
        print(f"‚ùå Erreur de connexion: {e}")
        return False
    
    return True

def create_server_config_template():
    """Cr√©er un template de configuration pour les serveurs"""
    
    config_template = """
# Configuration Shadow Roll Bot - Template Serveur

## Variables d'environnement requises:
DISCORD_TOKEN=votre_token_bot
DISCORD_CLIENT_ID=votre_client_id

## Commandes de base:
- !menu / /menu : Menu principal
- !roll / /roll : Invocation de personnages
- !profile / /profile : Profil du joueur
- !daily / /daily : R√©compense quotidienne
- !game : Mini-jeux (Tu pr√©f√®res, etc.)

## Configuration admin (optionnelle):
- !addadmin @utilisateur : Ajouter un admin
- !adminpanel : Panel d'administration
- !createchar : Cr√©er un personnage personnalis√©

## Fonctionnalit√©s automatiques:
- Base de donn√©es SQLite (shadow_roll.db)
- Syst√®me de cache pour les performances
- Synchronisation automatique des commandes slash
- Sauvegarde automatique des donn√©es

## Support:
- Le bot fonctionne de mani√®re autonome
- Aucune configuration manuelle requise
- Compatible avec tous les serveurs Discord
"""
    
    with open("SERVER_SETUP_GUIDE.md", "w", encoding="utf-8") as f:
        f.write(config_template)
    
    print("üìÑ Guide de configuration cr√©√©: SERVER_SETUP_GUIDE.md")

async def main():
    """Fonction principale de configuration multi-serveurs"""
    
    print("üîß Configuration du bot Shadow Roll pour l'h√©bergement multi-serveurs...")
    
    # G√©n√©rer le lien d'invitation
    invite_link = await generate_invite_link()
    
    if invite_link:
        print(f"\nüîó LIEN D'INVITATION G√âN√âR√â:")
        print(f"   {invite_link}")
        print("\nüìã Copiez ce lien et partagez-le pour inviter le bot sur d'autres serveurs")
    
    # V√©rifier les permissions actuelles
    print("\nüîç V√©rification des permissions actuelles...")
    await check_bot_permissions()
    
    # Cr√©er le guide de configuration
    create_server_config_template()
    
    # Afficher le guide complet
    print_server_setup_guide()
    
    print("\n" + "="*60)
    print("‚úÖ CONFIGURATION MULTI-SERVEURS TERMIN√âE")
    print("="*60)
    print("\nLe bot Shadow Roll est maintenant pr√™t pour l'h√©bergement multi-serveurs!")
    print("Utilisez le lien d'invitation ci-dessus pour l'ajouter √† d'autres serveurs.")

if __name__ == "__main__":
    asyncio.run(main())